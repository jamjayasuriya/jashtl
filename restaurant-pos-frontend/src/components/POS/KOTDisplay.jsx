// src/components/POS/KOTDisplay.jsx
import React, { useEffect, useState } from 'react';
import ReactDOM from 'react-dom'; // Required for rendering outside root div

const KOTDisplay = () => {
  const [kotData, setKotData] = useState(null);

  useEffect(() => {
    // Retrieve KOT data from localStorage when the component mounts
    const storedKotData = localStorage.getItem('kotData');
    if (storedKotData) {
      try {
        const parsedKotData = JSON.parse(storedKotData);
        setKotData(parsedKotData);
        // Clear localStorage immediately after consuming the data
        localStorage.removeItem('kotData');

        // Automatically trigger print dialog
        // Use a slight delay to ensure content is rendered before printing
        const printTimer = setTimeout(() => {
          window.print();
          // Optionally close the window after printing (or let user close)
          // window.onafterprint = () => window.close();
        }, 500); // 500ms delay

        return () => clearTimeout(printTimer); // Cleanup timer
      } catch (e) {
        console.error("KOTDisplay: Error parsing KOT data from localStorage:", e);
        setKotData(null);
      }
    } else {
      console.warn("KOTDisplay: No KOT data found in localStorage.");
    }
  }, []); // Run only once on mount

  if (!kotData) {
    return (
      <div className="p-4 text-center text-gray-700">
        <p>Loading KOT data or no data available. Please try again from the POS.</p>
        <p>This window will close automatically after printing, or you can close it manually.</p>
      </div>
    );
  }

  // Styles for printing
  // These styles ensure a clean, receipt-like printout
  // They are placed directly in the component for simplicity as this is a print-only view.
  const printStyles = `
    body {
      font-family: 'Courier New', Courier, monospace;
      font-size: 10px; /* Smaller font for thermal printer style */
      margin: 0;
      padding: 10px; /* Small padding */
      width: 100%;
      box-sizing: border-box;
      color: #000;
    }
    .kot-container {
      width: 100%;
      max-width: 200px; /* Mimic common thermal printer width (e.g., 80mm = ~226px for 203dpi) */
      margin: 0 auto;
      border: none; /* No border for print */
      padding: 0;
    }
    h1, h2, h3, p {
      margin: 0;
      padding: 0;
      line-height: 1.2;
    }
    .header {
      text-align: center;
      margin-bottom: 10px;
    }
    .header h1 {
      font-size: 14px;
      font-weight: bold;
      text-transform: uppercase;
      margin-bottom: 2px;
    }
    .header p {
      font-size: 9px;
      margin-bottom: 1px;
    }
    .divider {
      border-top: 1px dashed #000;
      margin: 5px 0;
    }
    .item-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .item-list li {
      display: flex;
      justify-content: space-between;
      margin-bottom: 3px;
      font-size: 11px;
    }
    .item-list li .item-name {
      flex-grow: 1;
      padding-right: 5px;
    }
    .item-list li .item-qty {
      font-weight: bold;
    }
    .item-instructions {
      font-size: 9px;
      font-style: italic;
      margin-left: 10px;
      color: #333;
    }
    .footer {
      text-align: center;
      margin-top: 10px;
      font-size: 9px;
    }

    /* Hide elements not needed for print */
    @media print {
      body {
        -webkit-print-color-adjust: exact;
        print-color-adjust: exact;
      }
      .no-print {
        display: none !important;
      }
    }
  `;

  return (
    <html>
      <head>
        <title>Kitchen Order Ticket</title>
        <style>{printStyles}</style>
      </head>
      <body>
        <div className="kot-container">
          <div className="header">
            <h1>KITCHEN ORDER TICKET</h1>
            <p>Order ID: {kotData.orderId}</p>
            <p>Customer: {kotData.customerName}</p>
            <p>Date/Time: {kotData.timestamp}</p>
          </div>

          <div className="divider"></div>

          <ul className="item-list">
            {kotData.items.map((item, index) => (
              <li key={index}>
                <span className="item-name">{item.name}</span>
                <span className="item-qty">x{item.quantity}</span>
                {item.instructions && (
                  <div className="item-instructions">{item.instructions}</div>
                )}
              </li>
            ))}
          </ul>

          <div className="divider"></div>

          <div className="footer">
            <p>Thank you!</p>
            <p>Generated by POS System</p>
          </div>
        </div>
      </body>
    </html>
  );
};

export default KOTDisplay;
